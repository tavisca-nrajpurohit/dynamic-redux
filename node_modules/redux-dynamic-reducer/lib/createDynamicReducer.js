'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /**
                                                                                                                                                                                                                                                                   * Copyright 2017, IOOF Holdings Limited.
                                                                                                                                                                                                                                                                   * All rights reserved.
                                                                                                                                                                                                                                                                   *
                                                                                                                                                                                                                                                                   * This source code is licensed under the BSD-style license found in the
                                                                                                                                                                                                                                                                   * LICENSE file in the root directory of this source tree.
                                                                                                                                                                                                                                                                   */

var _redux = require('redux');

var _reduxConcatenateReducers = require('redux-concatenate-reducers');

var _reduxConcatenateReducers2 = _interopRequireDefault(_reduxConcatenateReducers);

var _filteredReducer = require('./filteredReducer');

var _filteredReducer2 = _interopRequireDefault(_filteredReducer);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var expandReducers = function expandReducers(reducers) {
  var expandedReducers = { children: {} };

  for (var key in reducers) {
    var path = key.split('.');
    var currentNode = expandedReducers;

    var _iteratorNormalCompletion = true;
    var _didIteratorError = false;
    var _iteratorError = undefined;

    try {
      for (var _iterator = path[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var element = _step.value;

        if (!currentNode.children[element]) {
          currentNode.children[element] = { children: {} };
        }

        currentNode = currentNode.children[element];
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }

    currentNode.reducer = reducers[key];
  }

  return expandedReducers;
};

var collapseReducers = function collapseReducers(node) {
  var reducer = node.reducer,
      children = node.children;


  var childrenKeys = Object.keys(children);

  if (!childrenKeys.length) {
    return reducer;
  }

  var reducersToCombine = childrenKeys.reduce(function (reducerMap, key) {
    return _extends({}, reducerMap, _defineProperty({}, key, collapseReducers(children[key])));
  }, {});

  var childrenReducer = (0, _redux.combineReducers)(reducersToCombine);

  return reducer ? (0, _reduxConcatenateReducers2.default)([(0, _filteredReducer2.default)(reducer), (0, _filteredReducer2.default)(childrenReducer)]) : childrenReducer;
};

var createDynamicReducer = function createDynamicReducer(reducers) {
  var expandedReducers = expandReducers(reducers);
  return collapseReducers(expandedReducers);
};

exports.default = createDynamicReducer;